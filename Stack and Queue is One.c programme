// inserting and displaying are same b
// stack deleting start last element queue deleting start with first element
#include<stdio.h>
#define max 50
int f = -1;
int r = -1;
int a[max];
int b[max];
void insert();
void delete1();
void delete1();
void display();
void main()
{
    int ch, sq;

    while(1)
    {
        printf("Enter the choice here 1) Insert 2) Delete 3) Display\n");
        scanf("%d", &ch);


        switch(ch)
        {
            case 1:
                printf("Insertion Operation\n");
                insert();
                break;
            case 2:
                printf("Deletions Operation\n");
                printf("Choose Method 1) stack 2) Queue\n");
                scanf("%d", &sq);
                if(sq == 1)
                {
                    delete2();
                }
                else if(sq == 2)
                {
                    delete1();
                }
                else{
                    printf("Wrong Choice");
                }


                break;
            case 3:
                printf("Display Operation\n");
                display();
                break;
            default:
                printf("Wrong Choice\n");
                break;
            }
        }
    }



void insert()
{
    int s;

    if (r == max-1)
    {
        printf("Queue is overflow\n");

    }
    else
    {
        if(f == -1)
        {
            f = 0;
        }

        printf("Enter the inserting Elements\n");
        scanf("%d", &s);
        r = r + 1;
        a[r] = s;
    }
}



void delete1()
{
    if(r == -1 || f > r)
    {
        printf("Queue is underflow\n");

    }
    else
    {
        printf("Deleted Elements -: %d\n", a[f]);
        f = f + 1;
    }
}


void delete2()
{
    if(r == -1 || f > r)
    {
        printf("Queue is underflow\n");

    }
    else
    {
        printf("Deleted Elements -: %d\n", a[r]);
        r = r - 1;
    }
}

void display()
{
    int i;
    if(r == -1 || f > r)
    {
        printf("Queue is overflow\n");
    }
    else
    {
        for(i = f; i <= r; i++)
        {
            printf("%d,", a[i]);
        }
        printf("\n");
    }
}
